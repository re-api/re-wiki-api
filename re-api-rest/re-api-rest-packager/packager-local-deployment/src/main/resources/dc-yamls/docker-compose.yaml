version: "3"

services:
  re-rest-service:
    image: ${re.rest.service.image.name}:${re.rest.service.image.version}
    ports:
      - "8000:8000"
    volumes:
      - ${project.build.directory}/spring-custom-config/re-rest-application.yaml:/config/application.yaml
    command: ["java", "-jar", "app.jar","--spring.config.location=file:/config/application.yaml"]
    depends_on:
      - re-scraper-service
      - re-active-mq
      - re-characters-database

  re-scraper-service:
    image: ${re.scraper.service.image.name}:${re.scraper.service.image.version}
    ports:
      - "8001:8001"
    volumes:
      - ${project.build.directory}/spring-custom-config/re-scraper-application.yaml:/config/application.yaml
    command: ["java", "-jar", "app.jar", "--spring.config.location=file:/config/application.yaml"]
    depends_on:
      - re-active-mq
      - re-characters-database

  re-active-mq:
    image: ${re.active.mq.image.name}:${re.active.mq.image.version}
    ports:
      - "61616:61616"
      - "8161:8161"

  re-characters-database:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - /var/lib/postgresql/re-characters-database:/var/lib/postgresql/data
      - ${project.build.directory}/db-init-scripts:/docker-entrypoint-initdb.d

